[{"/home/edward/code/home-monitor/client/src/index.js":"1","/home/edward/code/home-monitor/client/src/App.js":"2","/home/edward/code/home-monitor/client/src/store.js":"3","/home/edward/code/home-monitor/client/src/routes/PublicRoute.js":"4","/home/edward/code/home-monitor/client/src/routes/PrivateRoute.js":"5","/home/edward/code/home-monitor/client/src/components/admin/Navigation.js":"6","/home/edward/code/home-monitor/client/src/components/Login.js":"7","/home/edward/code/home-monitor/client/src/reducers/rootReducer.js":"8","/home/edward/code/home-monitor/client/src/components/admin/Map.js":"9","/home/edward/code/home-monitor/client/src/components/admin/Hospitals.js":"10","/home/edward/code/home-monitor/client/src/components/admin/Device.js":"11","/home/edward/code/home-monitor/client/src/components/socket.js":"12","/home/edward/code/home-monitor/client/src/reducers/deviceReducer.js":"13","/home/edward/code/home-monitor/client/src/reducers/hospitalReducer.js":"14","/home/edward/code/home-monitor/client/src/components/admin/mapStyles.js":"15","/home/edward/code/home-monitor/client/src/actions/hospitalActions.js":"16","/home/edward/code/home-monitor/client/src/actions/deviceActions.js":"17","/home/edward/code/home-monitor/client/src/actions/actionTypes.js":"18","/home/edward/code/home-monitor/client/src/reducers/homeReducer.js":"19","/home/edward/code/home-monitor/client/src/components/admin/Homes.js":"20","/home/edward/code/home-monitor/client/src/actions/homeActions.js":"21","/home/edward/code/home-monitor/client/src/components/admin/Logs.js":"22","/home/edward/code/home-monitor/client/src/components/Welcome.js":"23","/home/edward/code/home-monitor/client/src/components/Signup.js":"24"},{"size":487,"mtime":1670611865402,"results":"25","hashOfConfig":"26"},{"size":320,"mtime":1670722733530,"results":"27","hashOfConfig":"26"},{"size":324,"mtime":1670611865402,"results":"28","hashOfConfig":"26"},{"size":434,"mtime":1670630540866,"results":"29","hashOfConfig":"30"},{"size":431,"mtime":1670630514676,"results":"31","hashOfConfig":"30"},{"size":4971,"mtime":1670722359750,"results":"32","hashOfConfig":"26"},{"size":5774,"mtime":1670611865402,"results":"33","hashOfConfig":"26"},{"size":326,"mtime":1670631358276,"results":"34","hashOfConfig":"26"},{"size":4320,"mtime":1670611865402,"results":"35","hashOfConfig":"26"},{"size":11503,"mtime":1670611865402,"results":"36","hashOfConfig":"30"},{"size":5498,"mtime":1670611865402,"results":"37","hashOfConfig":"26"},{"size":57,"mtime":1670611865402,"results":"38","hashOfConfig":"26"},{"size":1181,"mtime":1670611865402,"results":"39","hashOfConfig":"26"},{"size":947,"mtime":1670611865402,"results":"40","hashOfConfig":"26"},{"size":4837,"mtime":1670611865402,"results":"41","hashOfConfig":"26"},{"size":819,"mtime":1670611865402,"results":"42","hashOfConfig":"26"},{"size":1110,"mtime":1670611865402,"results":"43","hashOfConfig":"26"},{"size":415,"mtime":1670630718896,"results":"44","hashOfConfig":"26"},{"size":821,"mtime":1670630811736,"results":"45","hashOfConfig":"26"},{"size":9044,"mtime":1670721205880,"results":"46","hashOfConfig":"26"},{"size":587,"mtime":1670664276164,"results":"47","hashOfConfig":"26"},{"size":388,"mtime":1670722285380,"results":"48","hashOfConfig":"26"},{"size":1701,"mtime":1670722603170,"results":"49","hashOfConfig":"26"},{"size":11466,"mtime":1670611865402,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n2wwyw",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},"v3ioy1",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/edward/code/home-monitor/client/src/index.js",[],"/home/edward/code/home-monitor/client/src/App.js",["103"],"/home/edward/code/home-monitor/client/src/store.js",[],"/home/edward/code/home-monitor/client/src/routes/PublicRoute.js",["104"],"// import React, {useState, useEffect, useContext} from 'react'\nimport React, {useContext} from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n// import {LecturerContext} from '../../context/LecturerContext'\n\nconst PublicRoute = (props) => {\n    const {children, ...rest} = props\n    const isAuth = localStorage.getItem(\"isAuthenticated\")\n    // const [isAuthenticated, setIsAuthenticated] = useState(null)\n    // useEffect(() => {\n    //     const authState = localStorage.getItem(\"isAuthenticated\")\n    //     setIsAuthenticated(authState)\n    // }, [])\n\n    // const {state} = useContext(LecturerContext)\n\n    return(\n        <Route\n            {...rest}\n            render = { () => {\n                // return state.isAuthenticated || isAuth === \"true\" ? <Redirect to=\"/dashboard\" /> : children\n                return isAuth === \"true\" ? <Redirect to=\"/dashboard\" /> : children\n            }}\n         />\n    )\n}\n\nexport default PublicRoute",["105","106"],"/home/edward/code/home-monitor/client/src/routes/PrivateRoute.js",["107"],"// import React, {useEffect, useState, useContext} from 'react'\nimport React, {useContext} from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n// import {LecturerContext} from '../../context/LecturerContext'\n\nconst PrivateRoute = (props) => {\n    const {children, ...rest} = props\n    const isAuth = localStorage.getItem(\"isAuthenticated\")\n    // const [isAuthenticated, setIsAuthenticated] = useState(null)\n    // useEffect(() => {\n    //     const authState = localStorage.getItem(\"isAuthenticated\")\n    //     setIsAuthenticated(authState)\n    // }, [])\n\n    // const {state} = useContext(LecturerContext)\n\n    return(\n        <Route\n            {...rest}\n            render = { () => {\n                // return state.isAuthenticated || isAuth === \"true\" ? children : <Redirect to=\"/signin\" />\n                return isAuth === \"true\" ? children : <Redirect to=\"/login\" />\n            }}\n        />\n    )\n}\n\nexport default PrivateRoute","/home/edward/code/home-monitor/client/src/components/admin/Navigation.js",[],"/home/edward/code/home-monitor/client/src/components/Login.js",["108","109"],"/home/edward/code/home-monitor/client/src/reducers/rootReducer.js",[],"/home/edward/code/home-monitor/client/src/components/admin/Map.js",[],"/home/edward/code/home-monitor/client/src/components/admin/Hospitals.js",["110","111","112","113"],"import React, {Component} from 'react'\nimport {\n    ListGroup,\n    ListGroupItem,\n    ListGroupItemHeading,\n    ListGroupItemText,\n    Modal,\n    ModalBody,\n    ModalHeader,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Button,\n    Col,\n    Row\n} from 'reactstrap'\n\nimport {connect} from 'react-redux'\n\nimport {addHospital, getHospitals} from '../../actions/hospitalActions'\n\n// import axios from 'axios'\nclass Hospital extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            newHospital: {\n                hospitalName: \"\",\n                address: \"\",\n                email: \"\",\n                latitude: null,\n                longitude: null,\n                phonePrimary: \"\",\n                phoneSecondary: \"\",\n                numOfAmbulance: \"\",\n            },\n            modal: false,\n            search: null,\n            matrix: [...props.matrix]\n        }\n    }\n\n    componentDidMount(){\n        // function to get all hospitals\n        this.props.getHospitals()\n        // this.hospitalDistance()\n    }\n\n/**\n    // Format the url\n    formatUrl = (url, origins, destinations) => {\n        const {api_key} = this.props\n        let newUrl = `${url}&origins=${origins.latitude},${origins.longitude}&destinations=`\n        for (let i = 0; i <= destinations.length - 1; i++){\n            if(i == destinations.length - 1){\n                newUrl = `${newUrl}${destinations[i].geometry.coordinates[0]}%2C${destinations[i].geometry.coordinates[1]}&key=${api_key}`\n                break;\n            }\n            newUrl = `${newUrl}${destinations[i].geometry.coordinates[0]}%2C${destinations[i].geometry.coordinates[1]}%7C`\n        }\n        return newUrl;\n    }\n\n    // Function to calculate disstance from device to all hospitals\n    hospitalDistance = () => {\n        const originLoc = this.props.devLoc\n        let allHospitals = this.props.hospitals.hospitalPositions\n        // console.log(\"Device Location: \", originLoc)\n        // console.log(\"All Hospitals: \", allHospitals)\n        let hospitalsWithDistance = []\n        let gUrl = this.formatUrl(\"https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial\", \n        originLoc, allHospitals)\n        console.log(\"New Before Axios Request\")\n        // axios.get(gUrl, {headers: {\n        //     'Access-Control-Allow-Origin': '*',\n        //     'Access-Control-Allow-Methods' : 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n        //   }}).then((resp) => {\n        const headers = { 'Content-Type': 'application/json', 'mode': 'no-cors'}\n        fetch(gUrl, { headers })\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"Axios Request\")\n                let hosDistance = data.rows[0].elements\n                hospitalsWithDistance = allHospitals.map((hospital, index) => {\n                    return {hospital, distance: hosDistance[index]}\n                })\n            })\n\n        console.log(hospitalsWithDistance)\n    }\n\n*/\n    // Action to create new hospital\n    newHospital = () => {\n        const newHospital = {\n            properties: {\n                hospitalName: this.state.newHospital.hospitalName,\n                address: this.state.newHospital.address,\n                email: this.state.newHospital.email,\n                phonePrimary: this.state.newHospital.phonePrimary,\n                phoneSecondary: this.state.newHospital.phoneSecondary,\n                numOfAmbulance: this.state.newHospital.numOfAmbulance,\n            },\n            geometry: {\n                coordinates: [Number(this.state.newHospital.longitude), Number(this.state.newHospital.latitude)]\n            }\n        }\n        console.log(newHospital)\n        this.props.addHospital(newHospital)\n\n        // Check to see if add was successful and then call toggle\n        this.toggleModal()\n    }\n\n    toggleModal = () => {\n        this.setState({modal: !this.state.modal})\n    }\n\n    hospitalInput = (event) => {\n        this.setState({...this.state, newHospital : {...this.state.newHospital, [event.target.name] : event.target.value}})\n    }\n\n    searchByName = (event) => {\n        this.setState({...this.state, [event.target.name] : event.target.value})\n    }\n\n    myDistance = (myId) => {\n        if(this.props.matrix.length < 1){\n            return 0\n        }\n        let mDistance = this.props.matrix.filter(matrix => {\n            if(matrix.hospital._id == myId){\n                return true\n            }\n        });\n        return mDistance[0].distance.distance.text\n        // console.log(\"nDistance\",mDistance[0].distance.distance.text)\n    }\n\n    callColor = (myId) => {\n        if(this.props.matrix.length < 1){\n            return {color:\"blue\"}\n        }\n        let dist;\n        if(myId == this.props.minId){\n            dist = {color:\"green\"}\n        }else{\n            dist = {color:\"red\"}\n        }\n        return dist\n        // return mColor[0].distance.distance.text\n    }\n\n    render(){\n\n        const {hospitalPositions} = this.props.hospitals\n        // console.log(\"this.props.matrix: \", this.props.matrix)\n\n        return(\n            <div className=\"container\">\n                <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Add Hospital</ModalHeader>\n                    <ModalBody>\n                    <div>\n                        <Form>\n                            <FormGroup>\n                                <Label for=\"name\">Hospital Name</Label>\n                                <Input type=\"name\" name=\"hospitalName\" id=\"hospitalName\" placeholder=\"Enter name of hospital\" onChange={this.hospitalInput} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"email\">Email</Label>\n                                <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter email address\" onChange={this.hospitalInput} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"address\">Address</Label>\n                                <Input type=\"text\" name=\"address\" id=\"address\" placeholder=\"Enter address\" onChange={this.hospitalInput} />\n                            </FormGroup>\n                            <Row form>\n                                <Col md={6}>\n                                    <FormGroup>\n                                        <Label for=\"latitude\">Latitude</Label>\n                                        <Input type=\"number\" name=\"latitude\" id=\"latitude\" onChange={this.hospitalInput} />\n                                    </FormGroup>\n                                </Col>\n                                <Col md={6}>\n                                    <FormGroup>\n                                        <Label for=\"longitude\">Longitude</Label>\n                                        <Input type=\"number\" name=\"longitude\" id=\"longitude\" onChange={this.hospitalInput} />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <Row form>\n                                <Col md={6}>\n                                    <FormGroup>\n                                        <Label for=\"phonePrimary\">Phone 1</Label>\n                                        <Input type=\"tel\" name=\"phonePrimary\" id=\"phonePrimary\" placeholder=\"Enter Modile Phone\" onChange={this.hospitalInput} />\n                                    </FormGroup>\n                                </Col>\n                                <Col md={6}>\n                                    <FormGroup>\n                                        <Label for=\"phoneSecondary\">Phone 2</Label>\n                                        <Input type=\"tel\" name=\"phoneSecondary\" id=\"phoneSecondary\" placeholder=\"Enter Office Phone\" onChange={this.hospitalInput} />\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                            <FormGroup>\n                                <Label for=\"numOfAmbulance\">No. of Ambulance</Label>\n                                <Input type=\"select\" name=\"numOfAmbulance\" id=\"numOfAmbulance\" onChange={this.hospitalInput} >\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                    <option value=\"6\">6</option>\n                                    <option value=\"7\">7</option>\n                                    <option value=\"8\">8</option>\n                                </Input>\n                            </FormGroup>\n                            <Button onClick={this.newHospital} color=\"dark\" block>Add Hospital</Button>\n                        </Form>\n                    </div>\n                    </ModalBody>\n                </Modal>\n                <Button onClick={this.toggleModal} color=\"dark\" block style={{marginBottom:\"1.5rem\"}}>Create</Button>\n                <hr />\n                <Input type=\"text\" name=\"search\" placeholder=\"Search Hospital by name\" onChange={this.searchByName} />\n                <br />\n                <ListGroup>\n                    {\n                        hospitalPositions.filter(hospital => {\n                            if(this.state.search == null){\n                                return hospital\n                            }else if(hospital.properties.hospitalName.toLowerCase().includes(this.state.search.toLowerCase())){\n                                return hospital\n                            }\n                        })\n                        .map((hospital, hIndex) =>\n                            <div key={hospital.properties.id}>\n                                <ListGroupItem>\n                                    <ListGroupItemHeading>{hospital.properties.hospitalName}</ListGroupItemHeading>\n                                    <ListGroupItemText>\n                                        {hospital.properties.address}<br />\n                                        Phone: {hospital.properties.phonePrimary}   |   Email: {hospital.properties.email}<br />\n                                        Ambulance Vehicles: {hospital.properties.numOfAmbulance}<br />\n                                        Latitude: {hospital.geometry.coordinates[0]} | Longitude: {hospital.geometry.coordinates[1]}\n                                    </ListGroupItemText>\n                                    <hr />\n                                    <ListGroupItemText style={this.callColor(hospital.properties.id)}>\n                                        <strong>\n                                            Distance: {this.myDistance(hospital.properties.id)}\n                                        </strong>\n                                    </ListGroupItemText>\n                                </ListGroupItem>\n                                <br />\n                            </div> \n                        )\n                    }\n                </ListGroup>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    hospitals: state.hospitals\n})\n\nexport default connect(mapStateToProps, {addHospital, getHospitals})(Hospital)","/home/edward/code/home-monitor/client/src/components/admin/Device.js",["114"],"/home/edward/code/home-monitor/client/src/components/socket.js",[],"/home/edward/code/home-monitor/client/src/reducers/deviceReducer.js",["115"],"/home/edward/code/home-monitor/client/src/reducers/hospitalReducer.js",["116"],"/home/edward/code/home-monitor/client/src/components/admin/mapStyles.js",["117"],"/home/edward/code/home-monitor/client/src/actions/hospitalActions.js",[],"/home/edward/code/home-monitor/client/src/actions/deviceActions.js",[],"/home/edward/code/home-monitor/client/src/actions/actionTypes.js",[],"/home/edward/code/home-monitor/client/src/reducers/homeReducer.js",["118"],"/home/edward/code/home-monitor/client/src/components/admin/Homes.js",["119","120","121","122","123","124"],"/home/edward/code/home-monitor/client/src/actions/homeActions.js",[],"/home/edward/code/home-monitor/client/src/components/admin/Logs.js",["125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"/home/edward/code/home-monitor/client/src/components/Welcome.js",[],"/home/edward/code/home-monitor/client/src/components/Signup.js",[],{"ruleId":"139","severity":1,"message":"140","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":15},{"ruleId":"139","severity":1,"message":"143","line":2,"column":16,"nodeType":"141","messageId":"142","endLine":2,"endColumn":26},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"139","severity":1,"message":"143","line":2,"column":16,"nodeType":"141","messageId":"142","endLine":2,"endColumn":26},{"ruleId":"139","severity":1,"message":"148","line":55,"column":8,"nodeType":"141","messageId":"142","endLine":55,"endColumn":11},{"ruleId":"139","severity":1,"message":"149","line":62,"column":10,"nodeType":"141","messageId":"142","endLine":62,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":132,"column":57,"nodeType":"152","messageId":"153","endLine":132,"endColumn":59},{"ruleId":"154","severity":1,"message":"155","line":133,"column":36,"nodeType":"156","messageId":"157","endLine":133,"endColumn":38},{"ruleId":"154","severity":1,"message":"155","line":146,"column":17,"nodeType":"156","messageId":"157","endLine":146,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":231,"column":59,"nodeType":"152","messageId":"153","endLine":231,"endColumn":61},{"ruleId":"139","severity":1,"message":"158","line":7,"column":5,"nodeType":"141","messageId":"142","endLine":7,"endColumn":13},{"ruleId":"139","severity":1,"message":"159","line":1,"column":13,"nodeType":"141","messageId":"142","endLine":1,"endColumn":23},{"ruleId":"139","severity":1,"message":"160","line":1,"column":13,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"161","severity":1,"message":"162","line":1,"column":1,"nodeType":"163","endLine":236,"endColumn":2},{"ruleId":"139","severity":1,"message":"164","line":1,"column":13,"nodeType":"141","messageId":"142","endLine":1,"endColumn":21},{"ruleId":"139","severity":1,"message":"165","line":5,"column":5,"nodeType":"141","messageId":"142","endLine":5,"endColumn":25},{"ruleId":"139","severity":1,"message":"166","line":21,"column":19,"nodeType":"141","messageId":"142","endLine":21,"endColumn":29},{"ruleId":"150","severity":1,"message":"151","line":126,"column":57,"nodeType":"152","messageId":"153","endLine":126,"endColumn":59},{"ruleId":"154","severity":1,"message":"155","line":127,"column":32,"nodeType":"156","messageId":"157","endLine":127,"endColumn":34},{"ruleId":"154","severity":1,"message":"155","line":140,"column":17,"nodeType":"156","messageId":"157","endLine":140,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":201,"column":51,"nodeType":"152","messageId":"153","endLine":201,"endColumn":53},{"ruleId":"139","severity":1,"message":"167","line":3,"column":5,"nodeType":"141","messageId":"142","endLine":3,"endColumn":14},{"ruleId":"139","severity":1,"message":"168","line":4,"column":5,"nodeType":"141","messageId":"142","endLine":4,"endColumn":18},{"ruleId":"139","severity":1,"message":"165","line":5,"column":5,"nodeType":"141","messageId":"142","endLine":5,"endColumn":25},{"ruleId":"139","severity":1,"message":"169","line":6,"column":5,"nodeType":"141","messageId":"142","endLine":6,"endColumn":22},{"ruleId":"139","severity":1,"message":"170","line":7,"column":5,"nodeType":"141","messageId":"142","endLine":7,"endColumn":10},{"ruleId":"139","severity":1,"message":"171","line":8,"column":5,"nodeType":"141","messageId":"142","endLine":8,"endColumn":14},{"ruleId":"139","severity":1,"message":"172","line":9,"column":5,"nodeType":"141","messageId":"142","endLine":9,"endColumn":16},{"ruleId":"139","severity":1,"message":"173","line":10,"column":5,"nodeType":"141","messageId":"142","endLine":10,"endColumn":9},{"ruleId":"139","severity":1,"message":"174","line":11,"column":5,"nodeType":"141","messageId":"142","endLine":11,"endColumn":14},{"ruleId":"139","severity":1,"message":"175","line":12,"column":5,"nodeType":"141","messageId":"142","endLine":12,"endColumn":10},{"ruleId":"139","severity":1,"message":"176","line":13,"column":5,"nodeType":"141","messageId":"142","endLine":13,"endColumn":10},{"ruleId":"139","severity":1,"message":"177","line":14,"column":5,"nodeType":"141","messageId":"142","endLine":14,"endColumn":11},{"ruleId":"139","severity":1,"message":"178","line":15,"column":5,"nodeType":"141","messageId":"142","endLine":15,"endColumn":8},{"ruleId":"139","severity":1,"message":"179","line":16,"column":5,"nodeType":"141","messageId":"142","endLine":16,"endColumn":8},"no-unused-vars","'Welcome' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","no-native-reassign",["180"],"no-negated-in-lhs",["181"],"'Box' is defined but never used.","'Copyright' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'CardText' is defined but never used.","'deviceData' is defined but never used.","'hospitalData' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'homeData' is defined but never used.","'ListGroupItemHeading' is defined but never used.","'deleteHome' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'ListGroupItemText' is defined but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalHeader' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation"]